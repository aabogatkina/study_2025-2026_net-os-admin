---
# Preamble

## Author
author:
  name: Богаткина Алёна Александровна
  degrees: DSc
  email: 1132231437@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: Презентация по лабораторной работе №6
subtitle: Администрирование сетевых подситем
license: CC BY
date: 2025-10-2

## Generic options
lang: ru-RU
crossref:
  lof-title: Список иллюстраций
  lot-title: Список таблиц
  lol-title: Листинги

## Fonts 
mainfont: DejaVu Sans
romanfont: DejaVu Sans 
sansfont: DejaVu Sans 
monofont: DejaVu Sans Mono 
mainfontoptions: Ligatures=TeX 
romanfontoptions: Ligatures=TeX 
sansfontoptions: Ligatures=TeX,Scale=MatchLowercase 
monofontoptions: Scale=MatchLowercase,Scale=0.9

## Formats
format:
### Pdf output format
  beamer:
    toc: true
    toc-title: Содержание
    number-sections: true
    colorlinks: false
    toc-depth: 2
    slide_level: 2
    aspectratio: 169
    section-titles: true
    theme: metropolis
    themeoptions: progressbar=frametitle,sectionpage=progressbar,numbering=fraction
    pdf-engine: xelatex
    fontenc: T2A
#### Language
    babel-lang: russian
    babel-otherlangs: english

### Html output
  revealjs:
    transition: slide
    margin: 0.2
    smaller: false
    output-ext: html
    theme: beige
    logo: _resources/image/logo_rudn.png
---

# Вводная часть

## Цель работы

Целью данной работы является приобретение практических навыков по установке и конфигурированию системы управления базами данных на примере программного обеспечения MariaDB.

# Выполнение лабораторной работы

## Установка MariaDB

Загрузили нашу операционную систему и перешли в рабочий каталог с проектом. Запустили виртуальную машину server. Далее на виртуальной машине server вошли под созданным нами в предыдущей работе пользователем и открыли терминал. Перешли в режим суперпользователя: ```sudo -i``` ([рис. @fig-001])

![Переход в режим суперпользователя](image/1.png){#fig-001 width=70%}

## Установка MariaDB

Далее установили необходимые для работы с базами данных пакеты: ```dnf -y install mariadb mariadb-server``` ([рис. @fig-002])

![Установка необходимых пакетов для работы с базами данных](image/2.png){#fig-002 width=70%}

## Установка MariaDB

Далее посмотрели конфигурационные файлы mariadb в каталоге */etc/my.cnf.d* и файл */etc/my.cnf* ([рис. @fig-003]), ([рис. @fig-004])

![Файлы в каталоге /etc/my.cnf.d и файл /etc/my.cnf](image/3.1.png){#fig-003 width=70%}

## Установка MariaDB

![Файлы в каталоге /etc/my.cnf.d и файл /etc/my.cnf](image/3.3.png){#fig-004 width=70%}

## Установка MariaDB

Далее для запуска и включения программного обеспечения mariadb использовали: ```systemctl start mariadb``` и ```systemctl enable mariadb``` ([рис. @fig-005])

![Запуск и включение mariadb](image/4.png){#fig-005 width=70%}

## Установка MariaDB

Далее убедились, что mariadb прослушивает порт 3306: ```ss -tulpen | grep mariadb``` ([рис. @fig-006])

![Порт который прослушивает mariadb](image/5.png){#fig-006 width=70%}

## Установка MariaDB

Далее запустили скрипт конфигурации безопасности mariadb: ```mysql_secure_installation```. Установили пароль для пользователя root базы данных, отключили удалённый корневой доступ и удалили тестовую базу данных и любых анонимных пользователей ([рис. @fig-007]), ([рис. @fig-008])

## Установка MariaDB

![Запуск скрипта конфигурации безопасности mariadb (1)](image/6.1.png){#fig-007 width=30%}

## Установка MariaDB

![Запуск скрипта конфигурации безопасности mariadb (2)](image/6.2.png){#fig-008 width=40%}

## Установка MariaDB

Для входа в базу данных с правами администратора базы данных ввели ```mysql -u root -p``` ([рис. @fig-009])

![Вход в базу данных с правами администратора (1)](image/7.png){#fig-009 width=70%}

## Установка MariaDB

Псомотрели список команд MySQL, введя ```\h``` ([рис. @fig-010])

![Список команд MySQL](image/8.png){#fig-010 width=50%}

## Установка MariaDB

Из приглашения интерактивной оболочки MariaDB для отображения доступных в настоящее время баз данных ввели MySQL-запрос ```SHOW DATABASES;``` ([рис. @fig-011])

![Доступные базы данных в настоящее время](image/9.png){#fig-011 width=60%}

## Установка MariaDB

Для выхода из интерфейса интерактивной оболочки MariaDB ввели ```exit;``` ([рис. @fig-012])

![Выход из интерфейса интерактивной оболочки MariaDB](image/10.png){#fig-012 width=70%}

## Конфигурация кодировки символов

Опять вошли в базу данных с правами администратора. Далее посмотрели статус MariaDB введя ```status``` ([рис. @fig-013])

![Статус MariaDB](image/11.png){#fig-013 width=70%}

## Конфигурация кодировки символов

Далее в каталоге */etc/my.cnf.d* создали файл *utf8.cnf* ([рис. @fig-014]): 

![Создание файла utf8.cnf](image/12.1.png){#fig-014 width=70%}

## Конфигурация кодировки символов

Открыв этот файл на редактирование пропишем в нём следующие строки ([рис. @fig-015]):

![Редактирование файла utf8.cnf](image/12.2.png){#fig-015 width=70%}

## Конфигурация кодировки символов

Далее перезапустили MariaDB с помощью ```systemctl restart mariadb``` ([рис. @fig-016])

![Презапуск MariaDB](image/13.png){#fig-016 width=70%}

## Конфигурация кодировки символов

Далее опять вошли в базу данных с правами администратора, посмотрели статус MariaDB и поняли что сервер и базы данных теперь используют utf8mb3 вместо latin1, что обеспечивает поддержку Unicode символов и корректное отображение кириллицы и других языков ([рис. @fig-017]), ([рис. @fig-018])

![Вход в базу данных с правами администратора (2)](image/14.1.png){#fig-017 width=70%}

## Конфигурация кодировки символов

![Статус MariaDB после конфигурации кодировки символов](image/14.2.png){#fig-018 width=70%}

## Создание базы данных

Опять зашли в базу данных с правами администратора ```mysql -u root -p``` ([рис. @fig-019])

![Вход в базу данных с правами администратора (3)](image/15.png){#fig-019 width=70%}

## Создание базы данных

Создали базу данных с именем addressbook: ```CREATE DATABASE addressbook CHARACTER SET utf8 COLLATE utf8_general_ci;``` ([рис. @fig-020])

![Создание базы данных с именем addressbook](image/16.png){#fig-020 width=70%}

## Создание базы данных

Перешли к базе данных addressbook: ```USE addressbook;``` ([рис. @fig-021])

![Переход к базе данных addressbook](image/17.png){#fig-021 width=70%}

## Создание базы данных

Отобразили имеющиеся в базе данных addressbook таблицы: ```SHOW TABLES;``` ([рис. @fig-022])

![Таблицы имеющиеся в базе данных addressbook](image/18.png){#fig-022 width=70%}

## Создание базы данных

Создали таблицу city с полями name и city: ```CREATE TABLE city(name VARCHAR(40), city VARCHAR(40));``` ([рис. @fig-023])

![Создание таблицы city](image/19.png){#fig-023 width=70%}

## Создание базы данных

Заполнили несколько строк таблицы некоторыми данными по аналогии в соответствии с синтаксисом MySQL ([рис. @fig-024]):

![Заполнение строк таблицы city](image/20.png){#fig-024 width=70%}

## Создание базы данных
 
Сделали следующий MySQL-запрос: ```SELECT * FROM city;``` ([рис. @fig-025])

![Запрос на выборку всех данных из таблицы city](image/21.png){#fig-025 width=70%}

## Создание базы данных

Создали пользователя для работы с базой данных addressbook и задали для него пароль: ```CREATE USER aabogatkina@'%' IDENTIFIED BY 'password';``` ([рис. @fig-026])

![Создание пользователя для работы с базой данных addressbook](image/22.png){#fig-026 width=70%}

## Создание базы данных

Далее предоставили права доступа созданному пользователю aabogatkina на действия с базой
данных addressbook (просмотр, добавление, обновление, удаление данных): ```GRANT SELECT,INSERT,UPDATE,DELETE ON addressbook.* TO aabogatkina@'%';``` ([рис. @fig-027])

![Предоставление прав доступа созданному пользователю на действия с базой данных addressbook](image/23.png){#fig-027 width=70%}

## Создание базы данныхs

Обновили привилегии (права доступа) базы данных addressbook: ```FLUSH PRIVILEGES;``` ([рис. @fig-028])

![Обновление прав доступа базы данных addressbook](image/24.png){#fig-028 width=70%}

## Создание базы данных

Далее посмотрели общую информацию о табице city базы данных addressbook: ```DESCRIBE city;``` ([рис. @fig-029])

![Общая информация о таблице city базы данных addressbook](image/25.png){#fig-029 width=70%}

## Создание базы данных

Далее вышли из окружения MariaDB: ```quit``` ([рис. @fig-030])

![Выход из окружения MariaDB](image/26.png){#fig-030 width=70%}

## Создание базы данных

Посмотрели список баз данных: ```mysqlshow -u root -p``` ([рис. @fig-031])

![Список баз данных](image/27.png){#fig-031 width=70%}

## Создание базы данныхs

Посмотрели список таблиц базы данных addressbook: ```mysqlshow -u root -p addressbook``` и ```mysqlshow -u aabogatkina -p addressbook``` ([рис. @fig-032]), ([рис. @fig-033])

![Список таблиц базы данных addressbook от администратора](image/28.1.png){#fig-032 width=70%}

## Создание базы данных

![Список таблиц базы данных addressbook от пользователя](image/28.2.png){#fig-033 width=70%}

##  Резервные копии

На виртуальной машине server создали каталог для резервных копий: ```mkdir -p /var/backup``` ([рис. @fig-034])

![Создание каталога для резервных копий](image/29.png){#fig-034 width=70%}

##  Резервные копии

Далее сделали резервную копию базы данных addressbook, сжатую резервную копию и сжатую резервную копию с указанием даты ([рис. @fig-035]), ([рис. @fig-036]), ([рис. @fig-037]):

![Создание резервной копии базы данных addressbook](image/30.png){#fig-035 width=70%}

##  Резервные копии

![Создание сжатой резервной копии базы данных addressbook](image/31.png){#fig-036 width=70%}

##  Резервные копии

![Создание сжатой резервной копии базы данных addressbook с указанием даты](image/32.png){#fig-037 width=70%}

##  Резервные копии

Далее аосстановили базу данных addressbook из резервной копии и из сжатой резервной копии ([рис. @fig-038]), ([рис. @fig-039]):

![Восстановление базы данных addressbook из резервной копии](image/33.png){#fig-038 width=70%}

##  Резервные копии

![Восстановление базы данных addressbook из сжатой резервной копии](image/34.png){#fig-039 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

На виртуальной машине server перешли в каталог для внесения изменений в настройки внутреннего окружения */vagrant/provision/server/*, создали в нём каталог *mysql*, в который поместили в соответствующие подкаталоги конфигурационные файлы MariaDB и резервную копию базы данных addressbook ([рис. @fig-040]):

![Копирование конфигурационных файлов и резервных копий базы данных в каталог mysql](image/35.png){#fig-040 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

В каталоге /vagrant/provision/server создали исполняемый файл mysql.sh ([рис. @fig-041]):

![Создание исполняемого файла mysql.sh](image/36.1.png){#fig-041 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

Открыв его на редактирование прописали в нём следующие строки ([рис. @fig-042]):

![Редактирование файла mysql.sh](image/36.2.png){#fig-042 width=30%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

Для отработки созданного скрипта во время загрузки виртуальных машин в конфигурационном файле Vagrantfile необходимо добавить в конфигурации сервера следующую запись ([рис. @fig-043]):

![Редактирование Vagrantfile](image/36.3.png){#fig-043 width=50%}

# Подведение итогов

## Выводы

В ходе выполнения лабораторной работы №5 мы приобрели практические навыки по расширенному конфигурированию HTTPсервера Apache в части безопасности и возможности использования PHP.

## Список литературы

1. [Лаборатораня работа №6](https://esystem.rudn.ru/pluginfile.php/2854752/mod_resource/content/6/006-mysql.pdf)
