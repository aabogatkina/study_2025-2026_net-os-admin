---
# Preamble

## Author
author:
  name: Богаткина Алёна Александровна
  degrees: DSc
  email: 1132231437@pfur.ru
  affiliation:
    - name: Российский университет дружбы народов
      country: Российская Федерация
      postal-code: 117198
      city: Москва
      address: ул. Миклухо-Маклая, д. 6

## Title
title: Презентация по лабораторной работе №5
subtitle: Администрирование сетевых подситем
license: CC BY
date: 2025-10-2

## Generic options
lang: ru-RU
crossref:
  lof-title: Список иллюстраций
  lot-title: Список таблиц
  lol-title: Листинги

## Fonts 
mainfont: DejaVu Sans
romanfont: DejaVu Sans 
sansfont: DejaVu Sans 
monofont: DejaVu Sans Mono 
mainfontoptions: Ligatures=TeX 
romanfontoptions: Ligatures=TeX 
sansfontoptions: Ligatures=TeX,Scale=MatchLowercase 
monofontoptions: Scale=MatchLowercase,Scale=0.9

## Formats
format:
### Pdf output format
  beamer:
    toc: true
    toc-title: Содержание
    number-sections: true
    colorlinks: false
    toc-depth: 2
    slide_level: 2
    aspectratio: 169
    section-titles: true
    theme: metropolis
    themeoptions: progressbar=frametitle,sectionpage=progressbar,numbering=fraction
    pdf-engine: xelatex
    fontenc: T2A
#### Language
    babel-lang: russian
    babel-otherlangs: english

### Html output
  revealjs:
    transition: slide
    margin: 0.2
    smaller: false
    output-ext: html
    theme: beige
    logo: _resources/image/logo_rudn.png
---

# Вводная часть

## Цель работы

Целью данной работы является приобретение практических навыков по расширенному конфигурированию HTTP-сервера Apache в части безопасности и возможности использования PHP.

# Выполнение лабораторной работы

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

На виртуальной машине server вошли под созданным нами в предыдущей работе пользователем и открыли терминал. Перешли в режим суперпользователя: ```sudo -i``` ([рис. @fig-001])

![Переход в режим суперпользователя](image/1.png){#fig-001 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

В каталоге */etc/ssl* создали каталог *private*: 

![Создание каталога private](image/2.png){#fig-002 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Далее сгенерировали ключ и сертификат, используя команду: ```openssl req -x509 -nodes -newkey rsa:2048 -keyout www.aabogatkina.net.key -out www.aabogatkina.net.crt```. И заполнили сертификат ([рис. @fig-003])

![Генерация ключа и сертификата](image/3.png){#fig-003 width=50%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Ключ и сертификат должны быть в соответствующих каталогах */etc/ssl/private/* и */etc/ssl/cert/* ([рис. @fig-004])

![Каталоги для ключа и сертификата](image/4.png){#fig-004 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Для перехода веб-сервера www.aabogatkina.net на функционирование через протокол HTTPS требуется изменить его конфигурационный файл. Перешли в каталог с конфигурационными файлами: ```cd /etc/httpd/conf.d``` ([рис. @fig-005])

![Каталог с конфигурационными файлами](image/5.png){#fig-005 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Открыли файл */etc/httpd/conf.d/www.aabogatkina.net.conf* на редактирование ([рис. @fig-006])

![Открытие конфигурационного файла](image/6.1.png){#fig-006 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Далее заменили содержимое файла */etc/httpd/conf.d/www.aabogatkina.net.conf* на следуюущее ([рис. @fig-007]):

![Содержание файла /etc/httpd/conf.d/www.aabogatkina.net.conf](image/6.2.png){#fig-007 width=40%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Далее внесли изменения в настройки межсетевого экрана на сервере, разрешив работу с https ([рис. @fig-008])

![Внесение изменений в настройки межсетевого экрана на сервере, разрешив работу с https](image/7.png){#fig-008 width=50%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Далее перезапустили веб-сервер: ```systemctl restart httpd``` ([рис. @fig-009])

![Перезапуск веб-сервера](image/8.png){#fig-009 width=70%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

После на виртуальной машине client в строке браузера ввели название веб-сервера www.aabogatkina.net и убедились, что произошло автоматическое переключение на работу по протоколу HTTPS. На открывшейся странице с сообщением о незащищённости соединения нажали кнопку «Дополнительно», затем добавили адрес нашего сервера в постоянные исключения ([рис. @fig-010])

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

![Добавление адреса в постоянные исключения](image/9.1.png){#fig-010 width=60%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

Затем посмотрели сожержание сертификата (нажали на значок с замком в адресной строке и кнопку «Подробнее») ([рис. @fig-011]), ([рис. @fig-012])

![Просмотр содержания сертификата (1)](image/9.2.png){#fig-011 width=60%}

## Конфигурирование HTTP-сервера для работы через протокол HTTPS

![Просмотр содержания сертификата (2)](image/9.3.png){#fig-012 width=50%}

## Конфигурирование HTTP-сервера для работы с PHP

Установили пакеты для работы с PHP: ```dnf -y install php``` ([рис. @fig-013])

![Установка пакетов для работы с PHP](image/10.png){#fig-013 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

Далее в каталоге */var/www/html/www.aabogatkina.net* заменили файл *index.html* на *index.php* ([рис. @fig-014])

![Змена файла](image/11.1.png){#fig-014 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

В нём прописали ([рис. @fig-015]):

![Содержание файла index.php](image/11.2.png){#fig-015 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

Скорректировали права доступа в каталог с веб-контентом: ```chown -R apache:apache /var/www``` ([рис. @fig-016])

![Корректировка прав доступа в каталог с веб-контентом](image/12.png){#fig-016 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

Далее восстановили контекст безопасности в SELinux ([рис. @fig-017])

![Восстановление контекста безопасности в SELinux](image/13.png){#fig-017 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

Перезапустили HTTP-сервер: ```systemctl restart httpd``` ([рис. @fig-018])

![Перезапуск HTTP-сервера](image/14.png){#fig-018 width=70%}

## Конфигурирование HTTP-сервера для работы с PHP

Далее на виртуальной машине client в строке браузера введли название веб-сервера www.aabogatkina.net и убедились, что была выведена страница с информацией об используемой на веб-сервере версии PHP ([рис. @fig-019])

## Конфигурирование HTTP-сервера для работы с PHP

![Страница об используемой на веб-сервере версии PHP](image/15.png){#fig-019 width=50%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

На виртуальной машине server перешли в каталог для внесения изменений в настройки внутреннего окружения */vagrant/provision/server/http* и в соответствующие каталоги скопировали конфигурационные файлы ([рис. @fig-020])

![Копирование конфигурационных файлов](image/16.png){#fig-020 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

В имеющийся скрипт */vagrant/provision/server/http.sh* внесли изменения, добавив установку PHP и настройку межсетевого экрана, разрешающую работать с https ([рис. @fig-021]), ([рис. @fig-022])

![Открытие скрипта http.sh](image/17.1.png){#fig-021 width=70%}

## Внесение изменений в настройки внутреннего окружения виртуальной машины

![Редактирование скрипта http.sh](image/17.2.png){#fig-022 width=60%}

# Подведение итогов

## Выводы

В ходе выполнения лабораторной работы №5 мы приобрели практические навыки по расширенному конфигурированию HTTPсервера Apache в части безопасности и возможности использования PHP.

## Список литературы

1. [Лаборатораня работа №5](https://esystem.rudn.ru/pluginfile.php/2854748/mod_resource/content/8/005-http-adv.pdf)
